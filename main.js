(()=>{"use strict";var e={7:(e,t,n)=>{e.exports=n.p+"59806db1143300964be7.jpg"},739:(e,t,n)=>{e.exports=n.p+"87ff01ab9b59015a2215.jpg"},935:(e,t,n)=>{e.exports=n.p+"c8a6dcc7e8df50e548cf.jpg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.m=e,n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.p="",n.b=document.baseURI||self.location.href,(()=>{var e=document.querySelector(".profile__edit-btn"),t=(document.querySelector(".profile__name"),document.querySelector(".profile__desc"),document.querySelector(".profile__add-btn")),r=document.querySelector(".popup_type_edit-profile"),o=r.querySelector(".popup__form"),i=(r.querySelector(".popup__input_type_name"),r.querySelector(".popup__input_type_profession"),r.querySelector(".popup__submit-btn"),Array.from(r.querySelectorAll(".popup__input")),document.querySelector(".popup_type_add-card")),u=i.querySelector(".popup__form"),c=(u.querySelector(".popup__input_type_img-title"),u.querySelector(".popup__input_type_img-link"),i.querySelector(".popup__submit-btn"),Array.from(i.querySelectorAll(".popup__input")),document.querySelector(".popup_type_zoom-img")),a=(c.querySelector(".popup__img"),c.querySelector(".popup__img-desc"),document.querySelector(".cards-layout")),l=(document.querySelector(".card-template"),document.querySelectorAll(".popup"),document.querySelectorAll(".popup__close-btn"),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error",errorClassActive:"popup__input-error_active"}),p=[{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg",alt:"Байкал"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg",alt:"Камчатка"},{name:"Карачаево-Черкесская республика",link:new URL(n(935),n.b),alt:"Вид на монастырь в Карачаевске"},{name:"Домбай",link:new URL(n(7),n.b),alt:"Вид на горы в Домбае"},{name:"Гора Эльбрус",link:new URL(n(739),n.b),alt:"Вид на Эльбрус"},{name:"Рим",link:"https://images.unsplash.com/photo-1569416078500-3857b00616f8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1036&q=80",alt:"Вид на узкую улицу Рима"}];function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._alt=t.alt,void 0===t.alt&&(this._alt="Изображение: ".concat(t.name)),this._cardSelector=n,this._handleCardClick=r}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.cloneNode(!0).querySelector(".card")}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardTitle=this._element.querySelector(".card__title"),this._cardImg=this._element.querySelector(".card__image"),this._likeBtn=this._element.querySelector(".card__like-btn"),this._removeBtn=this._element.querySelector(".card__remove-btn"),this._cardTitle.textContent=this._name,this._cardImg.src=this._link,this._cardImg.alt=this._alt,this._setEventListeners(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._removeBtn.addEventListener("click",(function(){e._removeCard()})),this._likeBtn.addEventListener("click",(function(){e._setCardLike()})),this._cardImg.addEventListener("click",(function(){e._handleCardClick(e._name,e._link,e._alt)}))}},{key:"_removeCard",value:function(){this._element.remove(),this._element=null}},{key:"_setCardLike",value:function(){this._likeBtn.classList.toggle("card__like-btn_active")}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClassActive),t.textContent=""}},{key:"_showInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),t.classList.add(this._config.errorClassActive),t.textContent=e.validationMessage}},{key:"_includeInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_disableButtonElement",value:function(){this._buttonElement.disabled=!0}},{key:"_enableButtonElement",value:function(){this._buttonElement.disabled=!1}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))})),this._toggleButtonState()}},{key:"_toggleButtonState",value:function(){this._includeInvalidInput()?this._disableButtonElement():this._enableButtonElement()}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"resetValiadtion",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialArray=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._initialArray.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._closeBtn=this._popup.querySelector(".popup__close-btn"),this._popupContainer=this._popup.querySelector(".popup__container"),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"openPopup",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"closePopup",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.closePopup()}},{key:"_handleOverlayClose",value:function(e){e.target!=this._popup&&e.target!=this._popupContainer||this.closePopup()}},{key:"setEventListeners",value:function(){this._popup.addEventListener("click",this._handleOverlayClose.bind(this)),this._closeBtn.addEventListener("click",this.closePopup.bind(this))}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},S.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}function E(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._image=t._popup.querySelector(".popup__img"),t._imageCaption=t._popup.querySelector(".popup__img-desc"),t}return t=u,(n=[{key:"openPopup",value:function(e,t,n){this._image.src=t,this._image.alt=n,this._imageCaption.textContent=e,S(O(u.prototype),"openPopup",this).call(this)}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(b);function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=L(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function L(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function x(e,t){if(t&&("object"===q(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return x(this,e)});function u(e,t){var n,r=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e)).handleFormSubmit=r,n._form=n._popup.querySelector(".popup__form"),n._submitBtn=n._popup.querySelector(".popup__submit-btn"),n._inputList=n._popup.querySelectorAll(".popup__input"),n._formValues={},n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e._getInputValues()),e._form.reset()})),j(B(u.prototype),"setEventListeners",this).call(this)}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"closePopup",value:function(){j(B(u.prototype),"closePopup",this).call(this),this._form.reset()}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(b);function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t),this._description=document.querySelector(n)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,description:this._description.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._description.textContent=e.description}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),T=new y(l,o);T.enableValidation();var U=new y(l,u);U.enableValidation();var D=new A(".profile__name",".profile__desc"),F=new R(".popup_type_edit-profile",{handleFormSubmit:function(e){D.setUserInfo(e),F.closePopup()}});F.setEventListeners();var M=new R(".popup_type_add-card",{handleFormSubmit:function(e){N(e),M.closePopup()}});M.setEventListeners();var H=new P(".popup_type_zoom-img");H.setEventListeners();var z=function(e,t,n){H.openPopup(e,t,n)},G=function(e){return new f(e,".card-template",z).generateCard()},N=function(e){a.prepend(G(e))},W=new h({items:p,renderer:function(e){var t=G(e);W.addItem(t)}},".cards-layout");W.renderItems(),e.addEventListener("click",(function(){var e=D.getUserInfo();F.setInputValues(e),T.resetValiadtion(),F.openPopup()})),t.addEventListener("click",(function(){U.resetValiadtion(),M.openPopup()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiaU1BQ0lBLEVBQTJCLENBQUMsRUFHaEMsU0FBU0MsRUFBb0JDLEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQkUsSUFBakJELEVBQ0gsT0FBT0EsRUFBYUUsUUFHckIsSUFBSUMsRUFBU04sRUFBeUJFLEdBQVksQ0FHakRHLFFBQVMsQ0FBQyxHQU9YLE9BSEFFLEVBQW9CTCxHQUFVSSxFQUFRQSxFQUFPRCxRQUFTSixHQUcvQ0ssRUFBT0QsT0FDZixDQUdBSixFQUFvQk8sRUFBSUQsRUN6QnhCTixFQUFvQlEsRUFBSSxDQUFDQyxFQUFLQyxJQUFVQyxPQUFPQyxVQUFVQyxlQUFlQyxLQUFLTCxFQUFLQyxHQ0FsRlYsRUFBb0JlLEVBQUksR0NBeEJmLEVBQW9CZ0IsRUFBSUMsU0FBU0MsU0FBV0MsS0FBS0MsU0FBU0MsSyxNQ0ExRCxJQUFNQyxFQUFpQkwsU0FBU00sY0FBYyxzQkFHeENDLEdBRmNQLFNBQVNNLGNBQWMsa0JBQ2hCTixTQUFTTSxjQUFjLGtCQUM1Qk4sU0FBU00sY0FBYyxzQkFFdkNFLEVBQVlSLFNBQVNNLGNBQWMsNEJBQ25DRyxFQUFnQkQsRUFBVUYsY0FBYyxnQkFVeENJLEdBVGdCRixFQUFVRixjQUFjLDJCQUNsQkUsRUFBVUYsY0FDckMsaUNBRTBCRSxFQUFVRixjQUFjLHNCQUN4QkssTUFBTUMsS0FDaENKLEVBQVVLLGlCQUFpQixrQkFHWGIsU0FBU00sY0FBYyx5QkFDbENRLEVBQWVKLEVBQVNKLGNBQWMsZ0JBWXRDUyxHQVhtQkQsRUFBYVIsY0FDckMsZ0NBRXVCUSxFQUFhUixjQUNwQywrQkFFeUJJLEVBQVNKLGNBQWMsc0JBQ3ZCSyxNQUFNQyxLQUMvQkYsRUFBU0csaUJBQWlCLGtCQUdUYixTQUFTTSxjQUFjLHlCQUluQ1UsR0FIZUQsRUFBVVQsY0FBYyxlQUN2QlMsRUFBVVQsY0FBYyxvQkFFMUJOLFNBQVNNLGNBQWMsa0JBT3JDVyxHQU5lakIsU0FBU00sY0FBYyxrQkFFN0JOLFNBQVNhLGlCQUFpQixVQUNwQmIsU0FBU2EsaUJBQWlCLHFCQUd0QixDQUN4QkssYUFBYyxlQUNkQyxjQUFlLGdCQUNmQyxxQkFBc0IscUJBQ3RCQyxvQkFBcUIseUJBQ3JCQyxnQkFBaUIsMEJBQ2pCQyxXQUFZLHFCQUNaQyxpQkFBa0IsOEJDeENiQyxFQUFlLENBQ3BCLENBQ0NDLEtBQU0sU0FDTkMsS0FBTSxnRkFDTkMsSUFBSyxVQUVOLENBQ0NGLEtBQU0sV0FDTkMsS0FBTSxtRkFDTkMsSUFBSyxZQUVOLENBQ0NGLEtBQU0sa0NBQ05DLEtBcEJxQixJQUFJRSxJQUMxQixZQW9CQ0QsSUFBSyxrQ0FFTixDQUNDRixLQUFNLFNBQ05DLEtBckJnQixJQUFJRSxJQUFJLFVBc0J4QkQsSUFBSyx3QkFFTixDQUNDRixLQUFNLGVBQ05DLEtBekJnQixJQUFJRSxJQUFJLFlBMEJ4QkQsSUFBSyxrQkFFTixDQUNDRixLQUFNLE1BQ05DLEtBQU0saUtBQ05DLElBQUssNEIsMEtDcENERSxFQUFBQSxXQUNMLFdBQVlDLEVBQU1DLEVBQWNDLEksNEZBQWlCLFNBQ2hEQyxLQUFLQyxNQUFRSixFQUFLTCxLQUNsQlEsS0FBS0UsTUFBUUwsRUFBS0osS0FDbEJPLEtBQUtHLEtBQU9OLEVBQUtILFNBQ0ExQyxJQUFiNkMsRUFBS0gsTUFDUk0sS0FBS0csS0FBTCx1QkFBNEJOLEVBQUtMLE9BRWxDUSxLQUFLSSxjQUFnQk4sRUFDckJFLEtBQUtLLGlCQUFtQk4sQ0FDeEIsQyxpREFFRCxXQU1DLE9BTG9CakMsU0FDbEJNLGNBQWM0QixLQUFLSSxlQUNuQkUsUUFBUUMsV0FBVSxHQUNsQm5DLGNBQWMsUUFHaEIsRywwQkFFRCxXQVVDLE9BVEE0QixLQUFLUSxTQUFXUixLQUFLUyxlQUNyQlQsS0FBS1UsV0FBYVYsS0FBS1EsU0FBU3BDLGNBQWMsZ0JBQzlDNEIsS0FBS1csU0FBV1gsS0FBS1EsU0FBU3BDLGNBQWMsZ0JBQzVDNEIsS0FBS1ksU0FBV1osS0FBS1EsU0FBU3BDLGNBQWMsbUJBQzVDNEIsS0FBS2EsV0FBYWIsS0FBS1EsU0FBU3BDLGNBQWMscUJBQzlDNEIsS0FBS1UsV0FBV0ksWUFBY2QsS0FBS0MsTUFDbkNELEtBQUtXLFNBQVNJLElBQU1mLEtBQUtFLE1BQ3pCRixLQUFLVyxTQUFTakIsSUFBTU0sS0FBS0csS0FDekJILEtBQUtnQixxQkFDRWhCLEtBQUtRLFFBQ1osRyxnQ0FFRCxXQUFxQixXQUNwQlIsS0FBS2EsV0FBV0ksaUJBQWlCLFNBQVMsV0FDekMsRUFBS0MsYUFDTCxJQUVEbEIsS0FBS1ksU0FBU0ssaUJBQWlCLFNBQVMsV0FDdkMsRUFBS0UsY0FDTCxJQUVEbkIsS0FBS1csU0FBU00saUJBQWlCLFNBQVMsV0FDdkMsRUFBS1osaUJBQWlCLEVBQUtKLE1BQU8sRUFBS0MsTUFBTyxFQUFLQyxLQUNuRCxHQUNELEcseUJBRUQsV0FDQ0gsS0FBS1EsU0FBU1ksU0FDZHBCLEtBQUtRLFNBQVcsSUFDaEIsRywwQkFFRCxXQUNDUixLQUFLWSxTQUFTUyxVQUFVQyxPQUFPLHdCQUMvQixNLHNFQXZESTFCLEcsMEtDQUEyQixFQUFBQSxXQUNMLFdBQVlDLEVBQVFDLEksNEZBQWEsU0FDaEN6QixLQUFLMEIsUUFBVUYsRUFDZnhCLEtBQUsyQixhQUFlRixFQUNwQnpCLEtBQUs0QixXQUFhbkQsTUFBTUMsS0FDdkJzQixLQUFLMkIsYUFBYWhELGlCQUFpQnFCLEtBQUswQixRQUFRekMsZ0JBRWpEZSxLQUFLNkIsZUFBaUI3QixLQUFLMkIsYUFBYXZELGNBQ3ZDNEIsS0FBSzBCLFFBQVF4QyxxQkFFZCxDLG9EQUVELFNBQWdCNEMsR0FDZixJQUFNQyxFQUFlL0IsS0FBSzJCLGFBQWF2RCxjQUFsQixXQUNoQjBELEVBQWFFLEdBREcsV0FHckJGLEVBQWFULFVBQVVELE9BQU9wQixLQUFLMEIsUUFBUXRDLGlCQUMzQzJDLEVBQWFWLFVBQVVELE9BQU9wQixLQUFLMEIsUUFBUXBDLGtCQUMzQ3lDLEVBQWFqQixZQUFjLEVBQzNCLEcsNkJBRUQsU0FBZ0JnQixHQUNmLElBQU1DLEVBQWUvQixLQUFLMkIsYUFBYXZELGNBQWxCLFdBQ2hCMEQsRUFBYUUsR0FERyxXQUdyQkYsRUFBYVQsVUFBVVksSUFBSWpDLEtBQUswQixRQUFRdEMsaUJBQ3hDMkMsRUFBYVYsVUFBVVksSUFBSWpDLEtBQUswQixRQUFRcEMsa0JBQ3hDeUMsRUFBYWpCLFlBQWNnQixFQUFhSSxpQkFDeEMsRyxrQ0FFRCxXQUNDLE9BQU9sQyxLQUFLNEIsV0FBV08sTUFBSyxTQUFDTCxHQUM1QixPQUFRQSxFQUFhTSxTQUFTQyxLQUM5QixHQUNELEcsaUNBRUQsU0FBb0JQLEdBQ2ZBLEVBQWFNLFNBQVNDLE1BQ3pCckMsS0FBS3NDLGdCQUFnQlIsR0FFckI5QixLQUFLdUMsZ0JBQWdCVCxFQUV0QixHLG1DQUVELFdBQ0M5QixLQUFLNkIsZUFBZVcsVUFBVyxDQUMvQixHLGtDQUVELFdBQ0N4QyxLQUFLNkIsZUFBZVcsVUFBVyxDQUMvQixHLGdDQUVELFdBQXFCLFdBQ3BCeEMsS0FBSzRCLFdBQVdhLFNBQVEsU0FBQ1gsR0FDeEJBLEVBQWFiLGlCQUFpQixTQUFTLFdBQ3RDLEVBQUt5QixvQkFBb0JaLEdBQ3pCLEVBQUthLG9CQUNMLEdBQ0QsSUFFRDNDLEtBQUsyQyxvQkFDTCxHLGdDQUVELFdBQ0szQyxLQUFLNEMsdUJBQ1I1QyxLQUFLNkMsd0JBRUw3QyxLQUFLOEMsc0JBRU4sRyw4QkFFRCxXQUNDOUMsS0FBS2dCLG9CQUNMLEcsNkJBRUQsV0FBa0IsV0FDakJoQixLQUFLMkMscUJBRUwzQyxLQUFLNEIsV0FBV2EsU0FBUSxTQUFDWCxHQUN4QixFQUFLUSxnQkFBZ0JSLEVBQ3JCLEdBQ0QsTSxzRUFqRklQLEcsMEtDQWV3QixFQUFBQSxXQUNwQixhQUFpQ0MsR0FBbUIsSUFBdENDLEVBQXNDLEVBQXRDQSxNQUFPQyxFQUErQixFQUEvQkEsVSw0RkFBK0IsU0FDbkRsRCxLQUFLbUQsY0FBZ0JGLEVBQ3JCakQsS0FBS29ELFVBQVlGLEVBQ2pCbEQsS0FBS3FELFdBQWF2RixTQUFTTSxjQUFjNEUsRUFDekMsQyxnREFFRCxXQUFjLFdBQ2JoRCxLQUFLbUQsY0FBY1YsU0FBUSxTQUFBYSxHQUMxQixFQUFLRixVQUFVRSxFQUNmLEdBQ0QsRyxxQkFFRCxTQUFRQyxHQUNQdkQsS0FBS3FELFdBQVdHLFFBQVFELEVBQ3hCLE0sc0VBZm1CUixHLDBLQ0FBVSxFQUFBQSxXQUNwQixXQUFZQyxJLDRGQUFlLFNBQzFCMUQsS0FBSzJELE9BQVM3RixTQUFTTSxjQUFjc0YsR0FDckMxRCxLQUFLNEQsVUFBWTVELEtBQUsyRCxPQUFPdkYsY0FBYyxxQkFDM0M0QixLQUFLNkQsZ0JBQWtCN0QsS0FBSzJELE9BQU92RixjQUFjLHFCQUNqRDRCLEtBQUs4RCxnQkFBa0I5RCxLQUFLOEQsZ0JBQWdCQyxLQUFLL0QsS0FDakQsQyw4Q0FFRCxXQUNDQSxLQUFLMkQsT0FBT3RDLFVBQVVZLElBQUksZ0JBQzFCbkUsU0FBU21ELGlCQUFpQixVQUFXakIsS0FBSzhELGdCQUMxQyxHLHdCQUVELFdBQ0M5RCxLQUFLMkQsT0FBT3RDLFVBQVVELE9BQU8sZ0JBQzdCdEQsU0FBU2tHLG9CQUFvQixVQUFXaEUsS0FBSzhELGdCQUM3QyxHLDZCQUVELFNBQWdCRyxHQUNELFdBQVZBLEVBQUVDLEtBQ0xsRSxLQUFLbUUsWUFFTixHLGlDQUVELFNBQW9CRixHQUNmQSxFQUFFRyxRQUFVcEUsS0FBSzJELFFBQVVNLEVBQUVHLFFBQVVwRSxLQUFLNkQsaUJBQy9DN0QsS0FBS21FLFlBRU4sRywrQkFFRCxXQUNDbkUsS0FBSzJELE9BQU8xQyxpQkFBaUIsUUFBU2pCLEtBQUtxRSxvQkFBb0JOLEtBQUsvRCxPQUNwRUEsS0FBSzRELFVBQVUzQyxpQkFBaUIsUUFBU2pCLEtBQUttRSxXQUFXSixLQUFLL0QsTUFDOUQsTSxzRUFqQ21CeUQsRyx5d0NDRUFhLEVBQUFBLFNBQUFBLEksNnJCQUNwQixXQUFZWixHQUFlLGEsNEZBQUEsVUFDMUIsY0FBTUEsSUFDRGEsT0FBUyxFQUFLWixPQUFPdkYsY0FBYyxlQUN4QyxFQUFLb0csY0FBZ0IsRUFBS2IsT0FBT3ZGLGNBQWMsb0JBSHJCLENBSTFCLEMsc0NBQ0QsU0FBVW9CLEVBQU1DLEVBQU1DLEdBQ3JCTSxLQUFLdUUsT0FBT3hELElBQU10QixFQUNsQk8sS0FBS3VFLE9BQU83RSxJQUFNQSxFQUNsQk0sS0FBS3dFLGNBQWMxRCxZQUFjdEIsRUFDakMsNkNBQ0EsTSxzRUFYbUI4RSxDQUF1QmIsRyx5d0NDQXZCZ0IsRUFBQUEsU0FBQUEsSSw2ckJBQ3BCLFdBQVlmLEVBQVosR0FBaUQsTUFBcEJnQixFQUFvQixFQUFwQkEsaUJBQW9CLE8sNEZBQUEsVUFDaEQsY0FBTWhCLElBQ0RnQixpQkFBbUJBLEVBQ3hCLEVBQUtDLE1BQVEsRUFBS2hCLE9BQU92RixjQUFjLGdCQUN2QyxFQUFLd0csV0FBYSxFQUFLakIsT0FBT3ZGLGNBQWMsc0JBQzVDLEVBQUt3RCxXQUFhLEVBQUsrQixPQUFPaEYsaUJBQWlCLGlCQUMvQyxFQUFLa0csWUFBYyxDQUFDLEVBTjRCLENBT2hELEMsNENBQ0QsV0FBa0IsV0FLakIsT0FKQTdFLEtBQUs0QixXQUFXYSxTQUFRLFNBQUNxQyxHQUN4QixFQUFLRCxZQUFZQyxFQUFNdEYsTUFBUXNGLEVBQU1DLEtBQ3JDLElBRU0vRSxLQUFLNkUsV0FDWixHLCtCQUNELFdBQW9CLFdBRW5CN0UsS0FBSzJFLE1BQU0xRCxpQkFBaUIsVUFBVSxTQUFDZ0QsR0FDdENBLEVBQUVlLGlCQUNGLEVBQUtOLGlCQUFpQixFQUFLTyxtQkFDM0IsRUFBS04sTUFBTU8sT0FDWCxJQUNELHFEQUNBLEcsNEJBQ0QsU0FBZXJGLEdBQ2RHLEtBQUs0QixXQUFXYSxTQUFRLFNBQUNxQyxHQUN4QkEsRUFBTUMsTUFBUWxGLEVBQUtpRixFQUFNdEYsS0FDekIsR0FDRCxHLHdCQUNELFdBRUMsK0NBQ0FRLEtBQUsyRSxNQUFNTyxPQUNYLE0sc0VBbENtQlQsQ0FBc0JoQixHLDBLQ0Z0QjBCLEVBQUFBLFdBQ3BCLFdBQVlDLEVBQWFDLEksNEZBQWEsU0FDckNyRixLQUFLQyxNQUFRbkMsU0FBU00sY0FBY2dILEdBQ3BDcEYsS0FBS3NGLGFBQWV4SCxTQUFTTSxjQUFjaUgsRUFDM0MsQyxnREFDRCxXQUtDLE1BSmlCLENBQ2hCN0YsS0FBTVEsS0FBS0MsTUFBTWEsWUFDakJ5RSxZQUFhdkYsS0FBS3NGLGFBQWF4RSxZQUdoQyxHLHlCQUNELFNBQVlqQixHQUNYRyxLQUFLQyxNQUFNYSxZQUFjakIsRUFBS0wsS0FDOUJRLEtBQUtzRixhQUFheEUsWUFBY2pCLEVBQUswRixXQUNyQyxNLHNFQWZtQkosR0NtQmZLLEVBQXFCLElBQUlqRSxFQUFjeEMsRUFBa0JSLEdBQy9EaUgsRUFBbUJDLG1CQUNuQixJQUFNQyxFQUFvQixJQUFJbkUsRUFBY3hDLEVBQWtCSCxHQUM5RDhHLEVBQWtCRCxtQkFFbEIsSUFBTUUsRUFBYyxJQUFJUixFQUFTLGlCQUFrQixrQkFFN0NTLEVBQWdCLElBQUluQixFQUFjLDJCQUE0QixDQUNuRUMsaUJBQWtCLFNBQUNtQixHQUNsQkYsRUFBWUcsWUFBWUQsR0FDeEJELEVBQWN6QixZQUNkLElBR0Z5QixFQUFjRyxvQkFFZCxJQUFNQyxFQUFrQixJQUFJdkIsRUFBYyx1QkFBd0IsQ0FDakVDLGlCQUFrQixTQUFDbUIsR0FDbEJJLEVBQVdKLEdBQ1hHLEVBQWdCN0IsWUFDaEIsSUFHRjZCLEVBQWdCRCxvQkFFaEIsSUFBTUcsRUFBYyxJQUFJNUIsRUFBZSx3QkFFdkM0QixFQUFZSCxvQkFFWixJQUFNaEcsRUFBa0IsU0FBQ1AsRUFBTUMsRUFBTUMsR0FDcEN3RyxFQUFZQyxVQUFVM0csRUFBTUMsRUFBTUMsRUFDbEMsRUFFSzBHLEVBQWEsU0FBQ3ZHLEdBRW5CLE9BRGEsSUFBSUQsRUFBS0MsRUFBTSxpQkFBa0JFLEdBQWlCc0csY0FFL0QsRUFFS0osRUFBYSxTQUFDcEcsR0FDbkJmLEVBQVkwRSxRQUFRNEMsRUFBV3ZHLEdBQy9CLEVBRUt5RyxFQUFtQixJQUFJdkQsRUFDNUIsQ0FDQ0UsTUFBTzFELEVBQ1AyRCxTQUFVLFNBQUNxRCxHQUNWLElBQU1DLEVBQU9KLEVBQVdHLEdBQ3hCRCxFQUFpQkcsUUFBUUQsRUFDekIsR0FFRixpQkFHREYsRUFBaUJJLGNBRWpCdkksRUFBZThDLGlCQUFpQixTQUFTLFdBQ3hDLElBQU0wRixFQUFXaEIsRUFBWWlCLGNBQzdCaEIsRUFBY2lCLGVBQWVGLEdBQzdCbkIsRUFBbUJzQixrQkFDbkJsQixFQUFjTyxXQUNkLElBRUQ5SCxFQUFjNEMsaUJBQWlCLFNBQVMsV0FDdkN5RSxFQUFrQm9CLGtCQUNsQmQsRUFBZ0JHLFdBQ2hCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9tZXN0by93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL21lc3RvL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL21lc3RvL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdC9kYXRhLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdC9jYXJkcy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHQvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHQvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHQvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHQvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0L1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdC9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdC9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsImNvbnN0IHByb2ZpbGVFZGl0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ0blwiKTtcclxuY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX25hbWVcIik7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZGVzY1wiKTtcclxuY29uc3QgcHJvZmlsZUFkZEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ0blwiKTtcclxuXHJcbmNvbnN0IHBvcHVwRWRpdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV9lZGl0LXByb2ZpbGVcIik7XHJcbmNvbnN0IHBvcHVwRWRpdEZvcm0gPSBwb3B1cEVkaXQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcclxuY29uc3QgcG9wdXBFZGl0TmFtZSA9IHBvcHVwRWRpdC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF90eXBlX25hbWVcIik7XHJcbmNvbnN0IHBvcHVwRWRpdFByb2Zlc3Npb24gPSBwb3B1cEVkaXQucXVlcnlTZWxlY3RvcihcclxuXHRcIi5wb3B1cF9faW5wdXRfdHlwZV9wcm9mZXNzaW9uXCJcclxuKTtcclxuY29uc3QgcG9wdXBFZGl0U3VibWl0QnRuID0gcG9wdXBFZGl0LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3N1Ym1pdC1idG5cIik7XHJcbmNvbnN0IHBvcHVwRWRpdElucHV0TGlzdCA9IEFycmF5LmZyb20oXHJcblx0cG9wdXBFZGl0LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2lucHV0XCIpXHJcbik7XHJcblxyXG5jb25zdCBwb3B1cEFkZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV9hZGQtY2FyZFwiKTtcclxuY29uc3QgcG9wdXBBZGRGb3JtID0gcG9wdXBBZGQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcclxuY29uc3QgcG9wdXBBZGRJbWdUaXRsZSA9IHBvcHVwQWRkRm9ybS5xdWVyeVNlbGVjdG9yKFxyXG5cdFwiLnBvcHVwX19pbnB1dF90eXBlX2ltZy10aXRsZVwiXHJcbik7XHJcbmNvbnN0IHBvcHVwQWRkSW1nTGluayA9IHBvcHVwQWRkRm9ybS5xdWVyeVNlbGVjdG9yKFxyXG5cdFwiLnBvcHVwX19pbnB1dF90eXBlX2ltZy1saW5rXCJcclxuKTtcclxuY29uc3QgcG9wdXBBZGRTdWJtaXRCdG4gPSBwb3B1cEFkZC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19zdWJtaXQtYnRuXCIpO1xyXG5jb25zdCBwb3B1cEFkZElucHV0TGlzdCA9IEFycmF5LmZyb20oXHJcblx0cG9wdXBBZGQucXVlcnlTZWxlY3RvckFsbChcIi5wb3B1cF9faW5wdXRcIilcclxuKTtcclxuXHJcbmNvbnN0IHBvcHVwWm9vbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV96b29tLWltZ1wiKTtcclxuY29uc3QgcG9wdXBab29tSW1nID0gcG9wdXBab29tLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltZ1wiKTtcclxuY29uc3QgcG9wdXBab29tRGVzYyA9IHBvcHVwWm9vbS5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWctZGVzY1wiKTtcclxuXHJcbmNvbnN0IGNhcmRzTGF5b3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkcy1sYXlvdXRcIik7XHJcbmNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZC10ZW1wbGF0ZVwiKTtcclxuXHJcbmNvbnN0IHBvcHVwcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBcIik7XHJcbmNvbnN0IGNsb3NlQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2Nsb3NlLWJ0blwiKTtcclxuY29uc3QgZ2V0Q2FyZEJ5RXZlbnQgPSAoZSkgPT4gZS5jdXJyZW50VGFyZ2V0LmNsb3Nlc3QoXCIuY2FyZFwiKTtcclxuXHJcbmNvbnN0IHZhbGlkYXRpb25Db25maWcgPSB7XHJcblx0Zm9ybVNlbGVjdG9yOiBcIi5wb3B1cF9fZm9ybVwiLFxyXG5cdGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxyXG5cdHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5wb3B1cF9fc3VibWl0LWJ0blwiLFxyXG5cdGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG5cdGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG5cdGVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0LWVycm9yXCIsXHJcblx0ZXJyb3JDbGFzc0FjdGl2ZTogXCJwb3B1cF9faW5wdXQtZXJyb3JfYWN0aXZlXCIsXHJcbn07XHJcblxyXG5leHBvcnQge1xyXG5cdHByb2ZpbGVFZGl0QnRuLFxyXG5cdHByb2ZpbGVOYW1lLFxyXG5cdHByb2ZpbGVEZXNjcmlwdGlvbixcclxuXHRwcm9maWxlQWRkQnRuLFxyXG5cdHBvcHVwRWRpdCxcclxuXHRwb3B1cEVkaXRGb3JtLFxyXG5cdHBvcHVwRWRpdE5hbWUsXHJcblx0cG9wdXBFZGl0UHJvZmVzc2lvbixcclxuXHRwb3B1cEVkaXRTdWJtaXRCdG4sXHJcblx0cG9wdXBFZGl0SW5wdXRMaXN0LFxyXG5cdHBvcHVwQWRkLFxyXG5cdHBvcHVwQWRkRm9ybSxcclxuXHRwb3B1cEFkZEltZ1RpdGxlLFxyXG5cdHBvcHVwQWRkSW1nTGluayxcclxuXHRwb3B1cEFkZFN1Ym1pdEJ0bixcclxuXHRwb3B1cEFkZElucHV0TGlzdCxcclxuXHRwb3B1cFpvb20sXHJcblx0cG9wdXBab29tSW1nLFxyXG5cdHBvcHVwWm9vbURlc2MsXHJcblx0Y2FyZHNMYXlvdXQsXHJcblx0Y2FyZFRlbXBsYXRlLFxyXG5cdHBvcHVwcyxcclxuXHRjbG9zZUJ1dHRvbnMsXHJcblx0Z2V0Q2FyZEJ5RXZlbnQsXHJcblx0dmFsaWRhdGlvbkNvbmZpZyxcclxufTtcclxuIiwiY29uc3Qga2FyYWNoYWV2c2tJbWcgPSBuZXcgVVJMKFxyXG5cdFwiLi4vaW1hZ2VzL2NhcmRzL2thcmFjaGFldnNrLmpwZ1wiLFxyXG5cdGltcG9ydC5tZXRhLnVybFxyXG4pO1xyXG5jb25zdCBkb21iYXlJbWcgPSBuZXcgVVJMKFwiLi4vaW1hZ2VzL2NhcmRzL2RvbWJheS5qcGdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcclxuY29uc3QgZWxicnVzSW1nID0gbmV3IFVSTChcIi4uL2ltYWdlcy9jYXJkcy9lbGJydXMuanBnXCIsIGltcG9ydC5tZXRhLnVybCk7XHJcblxyXG5jb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcblx0e1xyXG5cdFx0bmFtZTogXCLQkdCw0LnQutCw0LtcIixcclxuXHRcdGxpbms6IFwiaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2JhaWthbC5qcGdcIixcclxuXHRcdGFsdDogXCLQkdCw0LnQutCw0LtcIixcclxuXHR9LFxyXG5cdHtcclxuXHRcdG5hbWU6IFwi0JrQsNC80YfQsNGC0LrQsFwiLFxyXG5cdFx0bGluazogXCJodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQva2FtY2hhdGthLmpwZ1wiLFxyXG5cdFx0YWx0OiBcItCa0LDQvNGH0LDRgtC60LBcIixcclxuXHR9LFxyXG5cdHtcclxuXHRcdG5hbWU6IFwi0JrQsNGA0LDRh9Cw0LXQstC+LdCn0LXRgNC60LXRgdGB0LrQsNGPINGA0LXRgdC/0YPQsdC70LjQutCwXCIsXHJcblx0XHRsaW5rOiBrYXJhY2hhZXZza0ltZyxcclxuXHRcdGFsdDogXCLQktC40LQg0L3QsCDQvNC+0L3QsNGB0YLRi9GA0Ywg0LIg0JrQsNGA0LDRh9Cw0LXQstGB0LrQtVwiLFxyXG5cdH0sXHJcblx0e1xyXG5cdFx0bmFtZTogXCLQlNC+0LzQsdCw0LlcIixcclxuXHRcdGxpbms6IGRvbWJheUltZyxcclxuXHRcdGFsdDogXCLQktC40LQg0L3QsCDQs9C+0YDRiyDQsiDQlNC+0LzQsdCw0LVcIixcclxuXHR9LFxyXG5cdHtcclxuXHRcdG5hbWU6IFwi0JPQvtGA0LAg0K3Qu9GM0LHRgNGD0YFcIixcclxuXHRcdGxpbms6IGVsYnJ1c0ltZyxcclxuXHRcdGFsdDogXCLQktC40LQg0L3QsCDQrdC70YzQsdGA0YPRgVwiLFxyXG5cdH0sXHJcblx0e1xyXG5cdFx0bmFtZTogXCLQoNC40LxcIixcclxuXHRcdGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE1Njk0MTYwNzg1MDAtMzg1N2IwMDYxNmY4P2l4bGliPXJiLTEuMi4xJml4aWQ9TW53eE1qQTNmREI4TUh4d2FHOTBieTF3WVdkbGZIeDhmR1Z1ZkRCOGZIeDgmYXV0bz1mb3JtYXQmZml0PWNyb3Amdz0xMDM2JnE9ODBcIixcclxuXHRcdGFsdDogXCLQktC40LQg0L3QsCDRg9C30LrRg9GOINGD0LvQuNGG0YMg0KDQuNC80LBcIixcclxuXHR9LFxyXG5dO1xyXG5cclxuZXhwb3J0IHsgaW5pdGlhbENhcmRzIH07XHJcbiIsImNsYXNzIENhcmQge1xyXG5cdGNvbnN0cnVjdG9yKGRhdGEsIGNhcmRTZWxlY3RvciwgaGFuZGxlQ2FyZENsaWNrKSB7XHJcblx0XHR0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG5cdFx0dGhpcy5fbGluayA9IGRhdGEubGluaztcclxuXHRcdHRoaXMuX2FsdCA9IGRhdGEuYWx0O1xyXG5cdFx0aWYgKGRhdGEuYWx0ID09PSB1bmRlZmluZWQpIHtcclxuXHRcdFx0dGhpcy5fYWx0ID0gYNCY0LfQvtCx0YDQsNC20LXQvdC40LU6ICR7ZGF0YS5uYW1lfWA7XHJcblx0XHR9XHJcblx0XHR0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XHJcblx0XHR0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XHJcblx0fVxyXG5cclxuXHRfZ2V0VGVtcGxhdGUoKSB7XHJcblx0XHRjb25zdCBjYXJkRWxlbWVudCA9IGRvY3VtZW50XHJcblx0XHRcdC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcclxuXHRcdFx0LmNvbnRlbnQuY2xvbmVOb2RlKHRydWUpXHJcblx0XHRcdC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIik7XHJcblxyXG5cdFx0cmV0dXJuIGNhcmRFbGVtZW50O1xyXG5cdH1cclxuXHJcblx0Z2VuZXJhdGVDYXJkKCkge1xyXG5cdFx0dGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcblx0XHR0aGlzLl9jYXJkVGl0bGUgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGl0bGVcIik7XHJcblx0XHR0aGlzLl9jYXJkSW1nID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xyXG5cdFx0dGhpcy5fbGlrZUJ0biA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ0blwiKTtcclxuXHRcdHRoaXMuX3JlbW92ZUJ0biA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19yZW1vdmUtYnRuXCIpO1xyXG5cdFx0dGhpcy5fY2FyZFRpdGxlLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuXHRcdHRoaXMuX2NhcmRJbWcuc3JjID0gdGhpcy5fbGluaztcclxuXHRcdHRoaXMuX2NhcmRJbWcuYWx0ID0gdGhpcy5fYWx0O1xyXG5cdFx0dGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHRcdHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG5cdH1cclxuXHJcblx0X3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG5cdFx0dGhpcy5fcmVtb3ZlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcblx0XHRcdHRoaXMuX3JlbW92ZUNhcmQoKTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdHRoaXMuX2xpa2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuXHRcdFx0dGhpcy5fc2V0Q2FyZExpa2UoKTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdHRoaXMuX2NhcmRJbWcuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuXHRcdFx0dGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmssIHRoaXMuX2FsdCk7XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cdF9yZW1vdmVDYXJkKCkge1xyXG5cdFx0dGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcclxuXHRcdHRoaXMuX2VsZW1lbnQgPSBudWxsO1xyXG5cdH1cclxuXHJcblx0X3NldENhcmRMaWtlKCkge1xyXG5cdFx0dGhpcy5fbGlrZUJ0bi5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idG5fYWN0aXZlXCIpO1xyXG5cdH1cclxufVxyXG5leHBvcnQgeyBDYXJkIH07XHJcbiIsImNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG5cdGNvbnN0cnVjdG9yKGNvbmZpZywgZm9ybUVsZW1lbnQpIHtcclxuXHRcdHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcclxuXHRcdHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcblx0XHR0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxyXG5cdFx0XHR0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2NvbmZpZy5pbnB1dFNlbGVjdG9yKVxyXG5cdFx0KTtcclxuXHRcdHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG5cdFx0XHR0aGlzLl9jb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3JcclxuXHRcdCk7XHJcblx0fVxyXG5cclxuXHRfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcblx0XHRjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG5cdFx0XHRgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcclxuXHRcdCk7XHJcblx0XHRpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcclxuXHRcdGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5lcnJvckNsYXNzQWN0aXZlKTtcclxuXHRcdGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcblx0fVxyXG5cclxuXHRfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcblx0XHRjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG5cdFx0XHRgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcclxuXHRcdCk7XHJcblx0XHRpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcclxuXHRcdGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5lcnJvckNsYXNzQWN0aXZlKTtcclxuXHRcdGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZTtcclxuXHR9XHJcblxyXG5cdF9pbmNsdWRlSW52YWxpZElucHV0KCkge1xyXG5cdFx0cmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuXHRcdFx0cmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cdF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XHJcblx0XHRpZiAoaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcblx0XHRcdHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0X2Rpc2FibGVCdXR0b25FbGVtZW50KCkge1xyXG5cdFx0dGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XHJcblx0fVxyXG5cclxuXHRfZW5hYmxlQnV0dG9uRWxlbWVudCgpIHtcclxuXHRcdHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcclxuXHR9XHJcblxyXG5cdF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuXHRcdHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuXHRcdFx0aW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcblx0XHRcdFx0dGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XHJcblx0XHRcdFx0dGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHJcblx0XHR0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0X3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG5cdFx0aWYgKHRoaXMuX2luY2x1ZGVJbnZhbGlkSW5wdXQoKSkge1xyXG5cdFx0XHR0aGlzLl9kaXNhYmxlQnV0dG9uRWxlbWVudCgpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dGhpcy5fZW5hYmxlQnV0dG9uRWxlbWVudCgpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0ZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuXHRcdHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcblx0fVxyXG5cclxuXHRyZXNldFZhbGlhZHRpb24oKSB7XHJcblx0XHR0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG5cclxuXHRcdHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuXHRcdFx0dGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuXHRcdH0pO1xyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IHsgRm9ybVZhbGlkYXRvciB9O1xyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuXHRjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG5cdFx0dGhpcy5faW5pdGlhbEFycmF5ID0gaXRlbXM7XHJcblx0XHR0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG5cdFx0dGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XHJcblx0fVxyXG5cclxuXHRyZW5kZXJJdGVtcygpIHtcclxuXHRcdHRoaXMuX2luaXRpYWxBcnJheS5mb3JFYWNoKGl0ZW0gPT4ge1xyXG5cdFx0XHR0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuXHRcdH0pO1xyXG5cdH1cclxuXHJcblx0YWRkSXRlbShlbGVtZW50KSB7XHJcblx0XHR0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuXHR9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG5cdGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuXHRcdHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuXHRcdHRoaXMuX2Nsb3NlQnRuID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2xvc2UtYnRuXCIpO1xyXG5cdFx0dGhpcy5fcG9wdXBDb250YWluZXIgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19jb250YWluZXJcIik7XHJcblx0XHR0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XHJcblx0fVxyXG5cclxuXHRvcGVuUG9wdXAoKSB7XHJcblx0XHR0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfb3BlbmVkXCIpO1xyXG5cdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG5cdH1cclxuXHJcblx0Y2xvc2VQb3B1cCgpIHtcclxuXHRcdHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XHJcblx0XHRkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcblx0fVxyXG5cclxuXHRfaGFuZGxlRXNjQ2xvc2UoZSkge1xyXG5cdFx0aWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcblx0XHRcdHRoaXMuY2xvc2VQb3B1cCgpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0X2hhbmRsZU92ZXJsYXlDbG9zZShlKSB7XHJcblx0XHRpZiAoZS50YXJnZXQgPT0gdGhpcy5fcG9wdXAgfHwgZS50YXJnZXQgPT0gdGhpcy5fcG9wdXBDb250YWluZXIpIHtcclxuXHRcdFx0dGhpcy5jbG9zZVBvcHVwKCk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRzZXRFdmVudExpc3RlbmVycygpIHtcclxuXHRcdHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVPdmVybGF5Q2xvc2UuYmluZCh0aGlzKSk7XHJcblx0XHR0aGlzLl9jbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5jbG9zZVBvcHVwLmJpbmQodGhpcykpO1xyXG5cdH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG5cdGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuXHRcdHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG5cdFx0dGhpcy5faW1hZ2UgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWdcIik7XHJcblx0XHR0aGlzLl9pbWFnZUNhcHRpb24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWctZGVzY1wiKTtcclxuXHR9XHJcblx0b3BlblBvcHVwKG5hbWUsIGxpbmssIGFsdCkge1xyXG5cdFx0dGhpcy5faW1hZ2Uuc3JjID0gbGluaztcclxuXHRcdHRoaXMuX2ltYWdlLmFsdCA9IGFsdDtcclxuXHRcdHRoaXMuX2ltYWdlQ2FwdGlvbi50ZXh0Q29udGVudCA9IG5hbWU7XHJcblx0XHRzdXBlci5vcGVuUG9wdXAoKTtcclxuXHR9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG5cdGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIHsgaGFuZGxlRm9ybVN1Ym1pdCB9KSB7XHJcblx0XHRzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuXHRcdHRoaXMuaGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcblx0XHR0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcclxuXHRcdHRoaXMuX3N1Ym1pdEJ0biA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3N1Ym1pdC1idG5cIik7XHJcblx0XHR0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKTtcclxuXHRcdHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcclxuXHR9XHJcblx0X2dldElucHV0VmFsdWVzKCkge1xyXG5cdFx0dGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcblx0XHRcdHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdHJldHVybiB0aGlzLl9mb3JtVmFsdWVzO1xyXG5cdH1cclxuXHRzZXRFdmVudExpc3RlbmVycygpIHtcclxuXHRcdC8vICBhZGQgc3VibWl0IGhhbmRsZXIg0LTQvtCx0LDQstC70Y/RgtGMINC+0LHRgNCw0LHQvtGC0YfQuNC6INGB0LDQsdC80LjRgtCwINGE0L7RgNC80YsuXHJcblx0XHR0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcclxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHR0aGlzLmhhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcblx0XHRcdHRoaXMuX2Zvcm0ucmVzZXQoKTtcclxuXHRcdH0pO1xyXG5cdFx0c3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHR9XHJcblx0c2V0SW5wdXRWYWx1ZXMoZGF0YSkge1xyXG5cdFx0dGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcblx0XHRcdGlucHV0LnZhbHVlID0gZGF0YVtpbnB1dC5uYW1lXTtcclxuXHRcdH0pO1xyXG5cdH1cclxuXHRjbG9zZVBvcHVwKCkge1xyXG5cdFx0Ly9jbG9zZSBwb3B1cCBhbmQgcmVzZXQgZm9ybVxyXG5cdFx0c3VwZXIuY2xvc2VQb3B1cCgpO1xyXG5cdFx0dGhpcy5fZm9ybS5yZXNldCgpO1xyXG5cdH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcblx0Y29uc3RydWN0b3IocHJvZmlsZU5hbWUsIHByb2ZpbGVEZXNjKSB7XHJcblx0XHR0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlTmFtZSk7XHJcblx0XHR0aGlzLl9kZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZURlc2MpO1xyXG5cdH1cclxuXHRnZXRVc2VySW5mbygpIHtcclxuXHRcdGNvbnN0IHVzZXJEYXRhID0ge1xyXG5cdFx0XHRuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxyXG5cdFx0XHRkZXNjcmlwdGlvbjogdGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnQsXHJcblx0XHR9O1xyXG5cdFx0cmV0dXJuIHVzZXJEYXRhO1xyXG5cdH1cclxuXHRzZXRVc2VySW5mbyhkYXRhKSB7XHJcblx0XHR0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG5cdFx0dGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBkYXRhLmRlc2NyaXB0aW9uO1xyXG5cdH1cclxufVxyXG4iLCJpbXBvcnQgXCIuL3BhZ2VzL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQge1xyXG5cdHByb2ZpbGVFZGl0QnRuLFxyXG5cdHByb2ZpbGVBZGRCdG4sXHJcblx0cG9wdXBFZGl0Rm9ybSxcclxuXHRwb3B1cEVkaXROYW1lLFxyXG5cdHBvcHVwRWRpdFByb2Zlc3Npb24sXHJcblx0cG9wdXBBZGRGb3JtLFxyXG5cdGNhcmRzTGF5b3V0LFxyXG5cdHZhbGlkYXRpb25Db25maWcsXHJcbn0gZnJvbSBcIi4vc2NyaXB0L2RhdGEuanNcIjtcclxuaW1wb3J0IHsgaW5pdGlhbENhcmRzIH0gZnJvbSBcIi4vc2NyaXB0L2NhcmRzLmpzXCI7XHJcbmltcG9ydCB7IENhcmQgfSBmcm9tIFwiLi9zY3JpcHQvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgeyBGb3JtVmFsaWRhdG9yIH0gZnJvbSBcIi4vc2NyaXB0L0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4vc2NyaXB0L1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuL3NjcmlwdC9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi9zY3JpcHQvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4vc2NyaXB0L1VzZXJJbmZvLmpzXCI7XHJcblxyXG5jb25zdCBwb3B1cEVkaXRWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uQ29uZmlnLCBwb3B1cEVkaXRGb3JtKTtcclxucG9wdXBFZGl0VmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuY29uc3QgcG9wdXBBZGRWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uQ29uZmlnLCBwb3B1cEFkZEZvcm0pO1xyXG5wb3B1cEFkZFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5jb25zdCBwcm9maWxlSW5mbyA9IG5ldyBVc2VySW5mbyhcIi5wcm9maWxlX19uYW1lXCIsIFwiLnByb2ZpbGVfX2Rlc2NcIik7XHJcblxyXG5jb25zdCBwcm9maWxlRWRpdG9yID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIucG9wdXBfdHlwZV9lZGl0LXByb2ZpbGVcIiwge1xyXG5cdGhhbmRsZUZvcm1TdWJtaXQ6IChmb3JtRGF0YSkgPT4ge1xyXG5cdFx0cHJvZmlsZUluZm8uc2V0VXNlckluZm8oZm9ybURhdGEpO1xyXG5cdFx0cHJvZmlsZUVkaXRvci5jbG9zZVBvcHVwKCk7XHJcblx0fSxcclxufSk7XHJcblxyXG5wcm9maWxlRWRpdG9yLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBuZXdDYXJkUmVuZGVyZXIgPSBuZXcgUG9wdXBXaXRoRm9ybShcIi5wb3B1cF90eXBlX2FkZC1jYXJkXCIsIHtcclxuXHRoYW5kbGVGb3JtU3VibWl0OiAoZm9ybURhdGEpID0+IHtcclxuXHRcdHJlbmRlckNhcmQoZm9ybURhdGEpO1xyXG5cdFx0bmV3Q2FyZFJlbmRlcmVyLmNsb3NlUG9wdXAoKTtcclxuXHR9LFxyXG59KTtcclxuXHJcbm5ld0NhcmRSZW5kZXJlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgY2FyZEltZ1pvb20gPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIucG9wdXBfdHlwZV96b29tLWltZ1wiKTtcclxuXHJcbmNhcmRJbWdab29tLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBoYW5kbGVDYXJkQ2xpY2sgPSAobmFtZSwgbGluaywgYWx0KSA9PiB7XHJcblx0Y2FyZEltZ1pvb20ub3BlblBvcHVwKG5hbWUsIGxpbmssIGFsdCk7XHJcbn07XHJcblxyXG5jb25zdCBjcmVhdGVDYXJkID0gKGRhdGEpID0+IHtcclxuXHRjb25zdCBjYXJkID0gbmV3IENhcmQoZGF0YSwgXCIuY2FyZC10ZW1wbGF0ZVwiLCBoYW5kbGVDYXJkQ2xpY2spLmdlbmVyYXRlQ2FyZCgpO1xyXG5cdHJldHVybiBjYXJkO1xyXG59O1xyXG5cclxuY29uc3QgcmVuZGVyQ2FyZCA9IChkYXRhKSA9PiB7XHJcblx0Y2FyZHNMYXlvdXQucHJlcGVuZChjcmVhdGVDYXJkKGRhdGEpKTtcclxufTtcclxuXHJcbmNvbnN0IGluaXRpYWxDYXJkc0xpc3QgPSBuZXcgU2VjdGlvbihcclxuXHR7XHJcblx0XHRpdGVtczogaW5pdGlhbENhcmRzLFxyXG5cdFx0cmVuZGVyZXI6IChjYXJkSXRlbSkgPT4ge1xyXG5cdFx0XHRjb25zdCBjYXJkID0gY3JlYXRlQ2FyZChjYXJkSXRlbSk7XHJcblx0XHRcdGluaXRpYWxDYXJkc0xpc3QuYWRkSXRlbShjYXJkKTtcclxuXHRcdH0sXHJcblx0fSxcclxuXHRcIi5jYXJkcy1sYXlvdXRcIlxyXG4pO1xyXG5cclxuaW5pdGlhbENhcmRzTGlzdC5yZW5kZXJJdGVtcygpO1xyXG5cclxucHJvZmlsZUVkaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuXHRjb25zdCBwcm9mRGF0YSA9IHByb2ZpbGVJbmZvLmdldFVzZXJJbmZvKCk7XHJcblx0cHJvZmlsZUVkaXRvci5zZXRJbnB1dFZhbHVlcyhwcm9mRGF0YSk7XHJcblx0cG9wdXBFZGl0VmFsaWRhdG9yLnJlc2V0VmFsaWFkdGlvbigpO1xyXG5cdHByb2ZpbGVFZGl0b3Iub3BlblBvcHVwKCk7XHJcbn0pO1xyXG5cclxucHJvZmlsZUFkZEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG5cdHBvcHVwQWRkVmFsaWRhdG9yLnJlc2V0VmFsaWFkdGlvbigpO1xyXG5cdG5ld0NhcmRSZW5kZXJlci5vcGVuUG9wdXAoKTtcclxufSk7XHJcbiJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJvIiwib2JqIiwicHJvcCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInAiLCJiIiwiZG9jdW1lbnQiLCJiYXNlVVJJIiwic2VsZiIsImxvY2F0aW9uIiwiaHJlZiIsInByb2ZpbGVFZGl0QnRuIiwicXVlcnlTZWxlY3RvciIsInByb2ZpbGVBZGRCdG4iLCJwb3B1cEVkaXQiLCJwb3B1cEVkaXRGb3JtIiwicG9wdXBBZGQiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwicG9wdXBBZGRGb3JtIiwicG9wdXBab29tIiwiY2FyZHNMYXlvdXQiLCJ2YWxpZGF0aW9uQ29uZmlnIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJlcnJvckNsYXNzQWN0aXZlIiwiaW5pdGlhbENhcmRzIiwibmFtZSIsImxpbmsiLCJhbHQiLCJVUkwiLCJDYXJkIiwiZGF0YSIsImNhcmRTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsInRoaXMiLCJfbmFtZSIsIl9saW5rIiwiX2FsdCIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9lbGVtZW50IiwiX2dldFRlbXBsYXRlIiwiX2NhcmRUaXRsZSIsIl9jYXJkSW1nIiwiX2xpa2VCdG4iLCJfcmVtb3ZlQnRuIiwidGV4dENvbnRlbnQiLCJzcmMiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJhZGRFdmVudExpc3RlbmVyIiwiX3JlbW92ZUNhcmQiLCJfc2V0Q2FyZExpa2UiLCJyZW1vdmUiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJGb3JtVmFsaWRhdG9yIiwiY29uZmlnIiwiZm9ybUVsZW1lbnQiLCJfY29uZmlnIiwiX2Zvcm1FbGVtZW50IiwiX2lucHV0TGlzdCIsIl9idXR0b25FbGVtZW50IiwiaW5wdXRFbGVtZW50IiwiZXJyb3JFbGVtZW50IiwiaWQiLCJhZGQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInNvbWUiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwiZGlzYWJsZWQiLCJmb3JFYWNoIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIl9pbmNsdWRlSW52YWxpZElucHV0IiwiX2Rpc2FibGVCdXR0b25FbGVtZW50IiwiX2VuYWJsZUJ1dHRvbkVsZW1lbnQiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2luaXRpYWxBcnJheSIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXAiLCJfY2xvc2VCdG4iLCJfcG9wdXBDb250YWluZXIiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImUiLCJrZXkiLCJjbG9zZVBvcHVwIiwidGFyZ2V0IiwiX2hhbmRsZU92ZXJsYXlDbG9zZSIsIlBvcHVwV2l0aEltYWdlIiwiX2ltYWdlIiwiX2ltYWdlQ2FwdGlvbiIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0IiwiX2Zvcm0iLCJfc3VibWl0QnRuIiwiX2Zvcm1WYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwicHJldmVudERlZmF1bHQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlVzZXJJbmZvIiwicHJvZmlsZU5hbWUiLCJwcm9maWxlRGVzYyIsIl9kZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uIiwicG9wdXBFZGl0VmFsaWRhdG9yIiwiZW5hYmxlVmFsaWRhdGlvbiIsInBvcHVwQWRkVmFsaWRhdG9yIiwicHJvZmlsZUluZm8iLCJwcm9maWxlRWRpdG9yIiwiZm9ybURhdGEiLCJzZXRVc2VySW5mbyIsInNldEV2ZW50TGlzdGVuZXJzIiwibmV3Q2FyZFJlbmRlcmVyIiwicmVuZGVyQ2FyZCIsImNhcmRJbWdab29tIiwib3BlblBvcHVwIiwiY3JlYXRlQ2FyZCIsImdlbmVyYXRlQ2FyZCIsImluaXRpYWxDYXJkc0xpc3QiLCJjYXJkSXRlbSIsImNhcmQiLCJhZGRJdGVtIiwicmVuZGVySXRlbXMiLCJwcm9mRGF0YSIsImdldFVzZXJJbmZvIiwic2V0SW5wdXRWYWx1ZXMiLCJyZXNldFZhbGlhZHRpb24iXSwic291cmNlUm9vdCI6IiJ9