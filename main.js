(()=>{"use strict";var e=document.querySelector(".profile__edit-btn"),t=(document.querySelector(".profile__name"),document.querySelector(".profile__desc"),document.querySelector(".profile__add-btn")),n=document.querySelector(".popup_type_edit-profile"),r=n.querySelector(".popup__form"),o=(n.querySelector(".popup__input_type_name"),n.querySelector(".popup__input_type_profession"),n.querySelector(".popup__submit-btn"),Array.from(n.querySelectorAll(".popup__input")),document.querySelector(".popup_type_add-card")),i=o.querySelector(".popup__form"),u=(i.querySelector(".popup__input_type_img-title"),i.querySelector(".popup__input_type_img-link"),o.querySelector(".popup__submit-btn"),Array.from(o.querySelectorAll(".popup__input")),document.querySelector(".popup_type_zoom-img")),c=(u.querySelector(".popup__img"),u.querySelector(".popup__img-desc"),document.querySelector(".cards-layout")),a=(document.querySelector(".card-template"),document.querySelectorAll(".popup"),document.querySelectorAll(".popup__close-btn"),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error",errorClassActive:"popup__input-error_active"});function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._alt=t.alt,void 0===t.alt&&(this._alt="Изображение: ".concat(t.name)),this._cardSelector=n,this._handleCardClick=r,this._handleDeleteClick=o}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.cloneNode(!0).querySelector(".card")}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardTitle=this._element.querySelector(".card__title"),this._cardImg=this._element.querySelector(".card__image"),this._likeBtn=this._element.querySelector(".card__like-btn"),this._removeBtn=this._element.querySelector(".card__remove-btn"),this._cardTitle.textContent=this._name,this._cardImg.src=this._link,this._cardImg.alt=this._alt,this._setEventListeners(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._removeBtn.addEventListener("click",(function(){e._handleDeleteClick(e)})),this._likeBtn.addEventListener("click",(function(){e.setCardLike()})),this._cardImg.addEventListener("click",(function(){e._handleCardClick(e._name,e._link,e._alt)}))}},{key:"removeCard",value:function(){this._element.remove(),this._element=null}},{key:"_setCardLike",value:function(){this._likeBtn.classList.toggle("card__like-btn_active")}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClassActive),t.textContent=""}},{key:"_showInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),t.classList.add(this._config.errorClassActive),t.textContent=e.validationMessage}},{key:"_includeInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_disableButtonElement",value:function(){this._buttonElement.disabled=!0}},{key:"_enableButtonElement",value:function(){this._buttonElement.disabled=!1}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))})),this._toggleButtonState()}},{key:"_toggleButtonState",value:function(){this._includeInvalidInput()?this._disableButtonElement():this._enableButtonElement()}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"resetValiadtion",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._itemsArray.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"setItems",value:function(e){this._itemsArray=e}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._closeBtn=this._popup.querySelector(".popup__close-btn"),this._popupContainer=this._popup.querySelector(".popup__container"),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"openPopup",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"closePopup",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.closePopup()}},{key:"_handleOverlayClose",value:function(e){e.target!=this._popup&&e.target!=this._popupContainer||this.closePopup()}},{key:"setEventListeners",value:function(){this._popup.addEventListener("click",this._handleOverlayClose.bind(this)),this._closeBtn.addEventListener("click",this.closePopup.bind(this))}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function S(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._image=t._popup.querySelector(".popup__img"),t._imageCaption=t._popup.querySelector(".popup__img-desc"),t}return t=u,(n=[{key:"openPopup",value:function(e,t,n){this._image.src=t,this._image.alt=n,this._imageCaption.textContent=e,b(E(u.prototype),"openPopup",this).call(this)}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(h);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},P.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function j(e,t){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},j(e,t)}function L(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function u(e,t){var n,r=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e)).handleFormSubmit=r,n._form=n._popup.querySelector(".popup__form"),n._submitBtn=n._popup.querySelector(".popup__submit-btn"),n._inputList=n._popup.querySelectorAll(".popup__input"),n._formValues={},n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e._getInputValues()),e._form.reset()})),P(I(u.prototype),"setEventListeners",this).call(this)}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"closePopup",value:function(){P(I(u.prototype),"closePopup",this).call(this),this._form.reset()}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(h);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t),this._description=document.querySelector(n)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,description:this._description.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._description.textContent=e.description}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t,this._token=n}var t,n;return t=e,(n=[{key:"_onResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._token}}).then((function(t){return e._onResponse(t)}))}},{key:"addCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:n,link:r})}).then((function(e){return t._onResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:{authorization:this._token}}).then((function(e){return t._onResponse(e)}))}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x=new y({renderer:function(e){var t=H(e);x.addItem(t)}},".cards-layout"),U=new f(a,r);U.enableValidation();var D=new f(a,i);D.enableValidation();var z=new T(".profile__name",".profile__desc"),F=new B(".popup_type_edit-profile",{handleFormSubmit:function(e){z.setUserInfo(e),F.closePopup()}});F.setEventListeners();var N=new B(".popup_type_add-card",{handleFormSubmit:function(e){Q.addCard(e).then((function(e){K(e),N.closePopup()}))}});N.setEventListeners();var J=new w(".popup_type_zoom-img");J.setEventListeners();var M=function(e,t,n){J.openPopup(e,t,n)},G=function(e){console.log(e),Q.deleteCard(e)},H=function(e){return new s(e,".card-template",M,G).generateCard()},K=function(e){c.prepend(H(e))};e.addEventListener("click",(function(){var e=z.getUserInfo();F.setInputValues(e),U.resetValiadtion(),F.openPopup()})),t.addEventListener("click",(function(){D.resetValiadtion(),N.openPopup()}));var Q=new A("https://mesto.nomoreparties.co/v1/cohort-51","a86c3d3e-174b-4d9f-bd44-c500fe855ebc");Q.getCards().then((function(e){x.setItems(e),x.renderItems()})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,