(()=>{"use strict";var e=document.querySelector(".profile__edit-btn"),t=(document.querySelector(".profile__name"),document.querySelector(".profile__desc"),document.querySelector(".profile__add-btn")),n=document.querySelector(".profile__avatar-btn"),r=document.querySelector(".popup_type_edit-avatar"),o=document.querySelector(".popup_type_edit-profile"),i=o.querySelector(".popup__form"),u=(o.querySelector(".popup__input_type_name"),o.querySelector(".popup__input_type_profession"),o.querySelector(".popup__submit-btn"),Array.from(o.querySelectorAll(".popup__input")),document.querySelector(".popup_type_add-card")),a=u.querySelector(".popup__form"),c=(a.querySelector(".popup__input_type_img-title"),a.querySelector(".popup__input_type_img-link"),u.querySelector(".popup__submit-btn"),Array.from(u.querySelectorAll(".popup__input")),document.querySelector(".popup_type_zoom-img")),s=(c.querySelector(".popup__img"),c.querySelector(".popup__img-desc"),document.querySelector(".cards-layout")),l=(document.querySelector(".card-template"),document.querySelectorAll(".popup"),document.querySelectorAll(".popup__close-btn"),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error",errorClassActive:"popup__input-error_active"});function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t,n){var r=n.data,o=n.handleCardClick,i=n.handleDeleteClick,u=n.handleLikeClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=r.name,this._link=r.link,this._alt=r.alt,void 0===r.alt&&(this._alt="Изображение: ".concat(r.name)),this._likes=r.likes,this._cardId=r._id,this._ownerId=r.owner._id,this._userId=r.currentUserId,this._cardSelector=t,this._handleCardClick=o,this._handleDeleteClick=i,this._handleLikeClick=u}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.cloneNode(!0).querySelector(".card")}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardTitle=this._element.querySelector(".card__title"),this._cardImg=this._element.querySelector(".card__image"),this._likeBtn=this._element.querySelector(".card__like-btn"),this._likeCounter=this._element.querySelector(".card__like-counter"),this._removeBtn=this._element.querySelector(".card__remove-btn"),this._ownerId!=this._userId&&this._removeBtn.remove(),this._cardTitle.textContent=this._name,this._cardImg.src=this._link,this._cardImg.alt=this._alt,this._setEventListeners(),this.hasLikes(),this.isLiked(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._removeBtn.addEventListener("click",(function(){e._handleDeleteClick()})),this._likeBtn.addEventListener("click",(function(){e._setCardLike(),e._handleLikeClick()})),this._cardImg.addEventListener("click",(function(){e._handleCardClick(e._name,e._link,e._alt)}))}},{key:"removeCard",value:function(){this._element.remove(),this._element=null}},{key:"_setCardLike",value:function(){this._likeBtn.classList.toggle("card__like-btn_active")}},{key:"isLiked",value:function(){this._likes.includes(this._userId)?this._likeBtn.classList.add("card__like-btn_active"):this._likeBtn.classList.remove("card__like-btn_active")}},{key:"hasLikes",value:function(){this._likes.length>0?this._likeCounter.textContent=this._likes.length:this._likeCounter.remove()}},{key:"getCardId",value:function(){return this._cardId}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClassActive),t.textContent=""}},{key:"_showInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),t.classList.add(this._config.errorClassActive),t.textContent=e.validationMessage}},{key:"_includeInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_disableButtonElement",value:function(){this._buttonElement.disabled=!0}},{key:"_enableButtonElement",value:function(){this._buttonElement.disabled=!1}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))})),this._toggleButtonState()}},{key:"_toggleButtonState",value:function(){this._includeInvalidInput()?this._disableButtonElement():this._enableButtonElement()}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"resetValiadtion",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._itemsArray.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"setItems",value:function(e){this._itemsArray=e}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._closeBtn=this._popup.querySelector(".popup__close-btn"),this._popupContainer=this._popup.querySelector(".popup__container"),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,n=[{key:"openPopup",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"closePopup",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.closePopup()}},{key:"_handleOverlayClose",value:function(e){e.target!=this._popup&&e.target!=this._popupContainer||this.closePopup()}},{key:"setEventListeners",value:function(){this._popup.addEventListener("click",this._handleOverlayClose.bind(this)),this._closeBtn.addEventListener("click",this.closePopup.bind(this))}},{key:"console",value:function(e){function t(){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(){console.log(this)}))}],n&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=S(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function S(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function O(e,t){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},O(e,t)}function w(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._image=t._popup.querySelector(".popup__img"),t._imageCaption=t._popup.querySelector(".popup__img-desc"),t}return t=u,(n=[{key:"openPopup",value:function(e,t,n){this._image.src=t,this._image.alt=n,this._imageCaption.textContent=e,g(E(u.prototype),"openPopup",this).call(this)}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(b);function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function R(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function u(e,t){var n,r=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e)).handleFormSubmit=r,n._form=n._popup.querySelector(".popup__form"),n._submitBtn=n._popup.querySelector(".popup__submit-btn"),n._inputList=n._popup.querySelectorAll(".popup__input"),n._formValues={},n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e._getInputValues()),e._form.reset()})),L(T(u.prototype),"setEventListeners",this).call(this)}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"closePopup",value:function(){L(T(u.prototype),"closePopup",this).call(this),this._form.reset()}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(b);function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=V(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},D.apply(this,arguments)}function V(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=F(e)););return e}function x(e,t){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},x(e,t)}function z(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function F(e){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},F(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&x(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=F(r);if(o){var n=F(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return z(this,e)});function u(e,t){var n,r=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=r,n._form=n._popup.querySelector(".popup__form"),n._submitBtn=n._popup.querySelector(".popup__submit-btn"),n}return t=u,(n=[{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._submitAction())})),D(F(u.prototype),"setEventListeners",this).call(this)}},{key:"openPopup",value:function(){D(F(u.prototype),"openPopup",this).call(this)}},{key:"setSubmitAction",value:function(e){this._submitAction=e}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(b);function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var G=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t),this._about=document.querySelector(n),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about}},{key:"setUserAvatar",value:function(e){this._avatar.src=e.avatar}}])&&J(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var M=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t,this._token=n}var t,n;return t=e,(n=[{key:"_onResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:{authorization:this._token}}).then((function(t){return e._onResponse(t)}))}},{key:"getCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:{authorization:this._token}}).then((function(t){return e._onResponse(t)}))}},{key:"addCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:n,link:r})}).then((function(e){return t._onResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._token}}).then((function(e){return t._onResponse(e)}))}},{key:"setUserInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:n,about:r})}).then((function(e){return t._onResponse(e)}))}},{key:"setAvatar",value:function(e){var t=this,n=e.avatar;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:n})}).then((function(e){return t._onResponse(e)}))}},{key:"setCardLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify()}).then((function(e){return t._onResponse(e)}))}},{key:"removeCardLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify()}).then((function(e){return t._onResponse(e)}))}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function K(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Q(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?K(Object(n),!0).forEach((function(t){W(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):K(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function W(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var X=new _(l,i);X.enableValidation();var Y=new _(l,a);Y.enableValidation();var Z=new _(l,r);Z.enableValidation();var $=new d({renderer:function(e){var t=ae(e);$.addItem(t)}},".cards-layout"),ee=new G(".profile__name",".profile__desc",".profile__avatar"),te=0,ne=new B(".popup_type_edit-profile",{handleFormSubmit:function(e){se.setUserInfo(e).then((function(e){ee.setUserInfo(e)})),ne.closePopup()}});ne.setEventListeners();var re=new B(".popup_type_add-card",{handleFormSubmit:function(e){se.addCard(e).then((function(e){ce(e),re.closePopup()}))}});re.setEventListeners();var oe=new B(".popup_type_edit-avatar",{handleFormSubmit:function(e){se.setAvatar(e).then((function(e){ee.setUserAvatar(e),oe.closePopup()}))}});oe.setEventListeners();var ie=new C(".popup_type_zoom-img");ie.setEventListeners();var ue=new N(".popup_type_confirmation",{handleFormSubmit:function(){}});ue.setEventListeners();var ae=function(e){var t=new f(".card-template",{data:Q(Q({},e),{},{currentUserId:te}),handleCardClick:function(e,t,n){ie.openPopup(e,t,n)},handleDeleteClick:function(){ue.openPopup(),ue.setSubmitAction((function(){se.deleteCard(t.getCardId()).then((function(){t.removeCard(),ue.closePopup()}))}))},handleLikeClick:function(){se.setCardLike(t.getCardId())}});return t.generateCard()},ce=function(e){s.prepend(ae(e))};e.addEventListener("click",(function(){var e=ee.getUserInfo();ne.setInputValues(e),X.resetValiadtion(),ne.openPopup()})),n.addEventListener("click",(function(){Z.resetValiadtion(),oe.openPopup()})),t.addEventListener("click",(function(){Y.resetValiadtion(),re.openPopup()}));var se=new M("https://mesto.nomoreparties.co/v1/cohort-52","e0e4f5fc-61ac-48ee-ab02-f5c2e770cefc");se.getCards().then((function(e){$.setItems(e.reverse()),$.renderItems()})).catch((function(e){console.log(e)})),se.getUserInfo().then((function(e){var t=e.name,n=e.about,r=e.avatar,o=e._id;te=o,ee.setUserInfo({name:t,about:n}),ee.setUserAvatar({avatar:r})}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,